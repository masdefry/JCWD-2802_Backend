// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  uid         String    @id @default(cuid())
  username    String    @db.VarChar(25)
  address     String    @db.LongText
  phoneNumber String    @db.VarChar(15)
  birthDate   DateTime  @db.Date
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  transactions Transaction[]

  @@map("members")
}

model LibraryBranch {
  id          Int       @id @default(autoincrement())
  name        String
  location    String
  phoneNumber String    @db.VarChar(15)
  email       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  library_branches_books LibraryBranchBook[]

  @@map("library_branches")
}

model Book {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(100)
  author      String    @db.VarChar(100)
  genre       String    @db.VarChar(15)
  publishYear DateTime  @db.Date
  isbn        String    @db.VarChar(100)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  transaction_details    TransactionDetail[]
  library_branches_books LibraryBranchBook[]

  @@map("books")
}

model Staff {
  uid         String    @id @default(cuid())
  name        String    @db.VarChar(50)
  email       String
  password    String
  phoneNumber String    @db.VarChar(15)
  position    String    @db.VarChar(15)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  transactions Transaction[]

  staff_schedules StaffSchedule[]

  @@map("staffs")
}

model Transaction {
  id            Int      @id @default(autoincrement())
  borrowingDate DateTime @db.Date
  returnDate    DateTime @db.Date
  totalPrice    Int
  fine          Int?

  memberUid String
  members   Member @relation(fields: [memberUid], references: [uid])

  staffUid String
  staffs   Staff  @relation(fields: [staffUid], references: [uid])

  transaction_details TransactionDetail[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("transactions")
}

model TransactionDetail {
  qty           Int
  transactionId Int
  transactions  Transaction @relation(fields: [transactionId], references: [id])
  bookId        Int
  books         Book        @relation(fields: [bookId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  deletedAt     DateTime?

  @@id([transactionId, bookId])
  @@map("transaction_details")
}

model StaffSchedule {
  id        Int       @id @default(autoincrement())
  clockIn   DateTime
  clockOut  DateTime
  staffUid  String
  staffs    Staff     @relation(fields: [staffUid], references: [uid])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("staff_schedules")
}

model LibraryBranchBook {
  bookId           Int
  books            Book          @relation(fields: [bookId], references: [id])
  libraryBranchId  Int
  library_branches LibraryBranch @relation(fields: [libraryBranchId], references: [id])

  @@id([bookId, libraryBranchId])
  @@map("library_branches_books")
}
